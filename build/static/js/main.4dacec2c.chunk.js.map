{"version":3,"sources":["styles/index.js","store/actions/actions.js","store/actions/actionTypes.js","components/ActionBar.js","components/MainScreen.js","components/SecondaryScreen.js","App.js","theme.js","helpers/index.js","store/rootReducer.js","store/store.js","index.js"],"names":["title","textAlign","color","marginBottom","fontSize","fontWeight","btn","textTransform","paper","display","alignItems","justifyContent","backgroundColor","minWidth","height","verticalAlign","PushInOperands","number","type","payload","UpdateOperand","useStyles","makeStyles","theme","styles","connect","state","operands","operand","operatorList","operator","dispatch","onUpdateOperand","onPushInOperands","onSetOperator","SetOperator","onAddOperation","operation","AddOperation","props","style","Box","Grid","container","spacing","direction","justify","position","bottom","maxWidth","paddingRight","item","xs","md","FormControl","variant","fullWidth","InputLabel","id","Select","labelId","label","value","onChange","e","target","MenuItem","map","index","key","TextField","className","Button","onClick","disabled","sm","lg","xl","Typography","component","gutterBottom","event","inputProps","padding","selectedOperator","result","Paper","elevation","marginTop","Container","minHeight","paddingBottom","length","MainScreen","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ExecAction","operandOne","operandTwo","Number","initialState","store","createStore","action","push","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.4dacec2c.chunk.js","sourcesContent":["export default {\r\n  title: {\r\n    textAlign: \"center\",\r\n    color: \"#50e3c2\",\r\n    marginBottom: \"75px\",\r\n    fontSize: \"3.7rem\",\r\n    fontWeight: \"100\",\r\n  },\r\n\r\n  btn: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: \"20px\",\r\n    textTransform: \"none\",\r\n  },\r\n\r\n  paper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#ecf5f7\",\r\n    textAlign: \"center\",\r\n    minWidth: \"70px\",\r\n    height: \"70px\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n};\r\n","import {\r\n  PUSH_IN_OPERANDS,\r\n  UPDATE_OPERAND,\r\n  SET_OPERATOR,\r\n  ADD_OPERATION,\r\n} from \"./actionTypes\";\r\n\r\nexport function PushInOperands(number) {\r\n  return {\r\n    type: PUSH_IN_OPERANDS,\r\n    payload: number,\r\n  };\r\n}\r\n\r\nexport function UpdateOperand(number) {\r\n  return {\r\n    type: UPDATE_OPERAND,\r\n    payload: number,\r\n  };\r\n}\r\n\r\nexport function SetOperator(operator) {\r\n  return {\r\n    type: SET_OPERATOR,\r\n    payload: operator,\r\n  };\r\n}\r\n\r\nexport function AddOperation(operation) {\r\n  return {\r\n    type: ADD_OPERATION,\r\n    payload: operation,\r\n  };\r\n}\r\n","export const PUSH_IN_OPERANDS = \"PUSH_IN_OPERANDS\";\r\nexport const UPDATE_OPERAND = \"UPDATE_OPERAND\";\r\nexport const SET_OPERATOR = \"SET_OPERATOR\";\r\nexport const ADD_OPERATION = \"ADD_OPERATION\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  TextField,\r\n  Button,\r\n  InputLabel,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport styles from \"../styles\";\r\nimport {\r\n  UpdateOperand,\r\n  PushInOperands,\r\n  SetOperator,\r\n  AddOperation,\r\n} from \"../store/actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => styles);\r\n\r\nconst ActionBar = (props) => {\r\n  const style = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n      >\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          spacing={1}\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"20px\",\r\n            maxWidth: \"1200px\",\r\n            paddingRight: \"-20px\",\r\n          }}\r\n        >\r\n          <Grid item xs={5} md={3}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel id=\"operator-input\">Operator</InputLabel>\r\n              <Select\r\n                labelId=\"operator-input\"\r\n                label=\"Operator\"\r\n                value={props.operator}\r\n                onChange={(e) => props.onSetOperator(e.target.value)}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n\r\n                {props.operatorList.map((operator, index) => {\r\n                  return (\r\n                    <MenuItem value={operator} key={index}>\r\n                      {operator}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={5} md={3}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Operand\"\r\n              className={style.btn}\r\n              onChange={(e) => props.onUpdateOperand(e.target.value)}\r\n              type=\"number\"\r\n            ></TextField>\r\n          </Grid>\r\n          <Grid item xs={10} md={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={style.btn}\r\n              fullWidth\r\n              color=\"primary\"\r\n              onClick={() =>\r\n                props.onAddOperation({\r\n                  operand: props.operand,\r\n                  operator: props.operator,\r\n                })\r\n              }\r\n              style={{ height: \"56px\" }}\r\n              disabled={!props.operator || !props.operand}\r\n            >\r\n              Add Operation\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    operands: state.operands,\r\n    operand: state.operand,\r\n    operatorList: state.operatorList,\r\n    operator: state.operator,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdateOperand: (number) => dispatch(UpdateOperand(number)),\r\n    onPushInOperands: (number) => dispatch(PushInOperands(number)),\r\n    onSetOperator: (operator) => dispatch(SetOperator(operator)),\r\n    onAddOperation: (operation) => dispatch(AddOperation(operation)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionBar);\r\n","import React from \"react\";\r\nimport styles from \"../styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { UpdateOperand, PushInOperands } from \"../store/actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => styles);\r\n\r\nconst Start = (props) => {\r\n  const style = useStyles();\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" justify=\"center\">\r\n      <Grid item xs={11} sm={6} md={6} lg={6} xl={6}>\r\n        <Typography\r\n          className={style.title}\r\n          variant=\"h3\"\r\n          component=\"h1\"\r\n          gutterBottom\r\n        >\r\n          {props.title}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\r\n        <Grid item xs={10} sm={10} md={6} lg={6} xl={6}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Please enter a number\"\r\n            type=\"number\"\r\n            style={{ height: 80 + \"px\" }}\r\n            onChange={(event) => props.onUpdateOperand(event.target.value)}\r\n            inputProps={{\r\n              style: {\r\n                height: 80 + \"px\",\r\n                padding: \"0 14px\",\r\n              },\r\n            }}\r\n          ></TextField>\r\n        </Grid>\r\n\r\n        <Grid item xs={10} sm={10} md={4} lg={4} xl={4}>\r\n          <Button\r\n            onClick={() => props.onPushInOperands(props.operand)}\r\n            className={style.btn}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ height: \"80px\" }}\r\n            fullWidth\r\n            disabled={!props.operand}\r\n          >\r\n            Add number\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    title: state.title,\r\n    operands: state.operands,\r\n    operand: state.operand,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdateOperand: (number) => dispatch(UpdateOperand(number)),\r\n    onPushInOperands: (number) => dispatch(PushInOperands(number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","import React from \"react\";\r\nimport styles from \"../styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { UpdateOperand, PushInOperands } from \"../store/actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => styles);\r\n\r\nconst SecondaryScreen = (props) => { \r\n  const style = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          spacing={2}\r\n          style={{ maxWidth: \"580px\" }}\r\n        >\r\n          {props.operands.map((operand, index) => {\r\n            return (\r\n              <Grid item xs={3} key={index}>\r\n                <Paper className={style.paper} elevation={0}>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    component=\"span\"\r\n                    style={{ color: \"#414145\" }}\r\n                  >\r\n                    {operand}\r\n                  </Typography>\r\n                </Paper>\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          {props.selectedOperator ? (\r\n            <Grid item xs={3}>\r\n              <Paper className={style.paper} elevation={0}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  component=\"span\"\r\n                  style={{ color: \"#414145\" }}\r\n                >\r\n                  {props.selectedOperator}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Typography\r\n          variant=\"h3\"\r\n          component=\"span\"\r\n          style={{ color: \"#414145\", marginTop: \"30px\", fontWeight: \"100\" }}\r\n        >\r\n          =\r\n        </Typography>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Typography\r\n          variant=\"h2\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          style={{ marginTop: \"30px\", fontWeight: \"100\" }}\r\n        >\r\n          {props.result}\r\n        </Typography>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    operands: state.operands,\r\n    selectedOperator: state.selectedOperator,\r\n    result: state.result,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdateOperand: (number) => dispatch(UpdateOperand(number)),\r\n    onPushInOperands: (number) => dispatch(PushInOperands(number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryScreen);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Box, Grid} from \"@material-ui/core\";\nimport ActionBar from \"./components/ActionBar\";\nimport MainScreen from \"./components/MainScreen\";\nimport SecondaryScreen from \"./components/SecondaryScreen\";\n\nconst App = (props) => {\n\n  return (\n    <Container style={{ maxWidth: \"1200px\" }}>\n      <Box>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          justify=\"center\"\n          style={{ minHeight: \"100vh\", paddingBottom: \"180px\" }}\n        >\n          {props.operands.length === 0 ? (\n            <MainScreen></MainScreen>\n          ) : (\n            <SecondaryScreen></SecondaryScreen>\n          )}\n        </Grid>\n\n        {props.operands.length !== 0 ? <ActionBar></ActionBar> : null}\n      </Box>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    operands: state.operands,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#79cea1\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","const ExecAction = (operator, operandOne, operandTwo) => {\r\n  switch (operator) {\r\n    case \"+\":\r\n      return Number(operandOne) + Number(operandTwo);\r\n\r\n    case \"-\":\r\n      return Number(operandOne) - Number(operandTwo);\r\n\r\n    case \"/\":\r\n      if (Number(operandTwo) === 0) {\r\n        return 0;\r\n      }\r\n\r\n      return Number(operandOne) / Number(operandTwo);\r\n\r\n    case \"*\":\r\n      return Number(operandOne) * Number(operandTwo);\r\n\r\n    default: {\r\n      return 0;\r\n    }\r\n  }\r\n};\r\n\r\nexport default ExecAction;\r\n","import {\r\n  PUSH_IN_OPERANDS,\r\n  UPDATE_OPERAND,\r\n  SET_OPERATOR,\r\n  ADD_OPERATION,\r\n} from \"./actions/actionTypes\";\r\nimport ExecAction from \"../helpers\";\r\n\r\nconst initialState = {\r\n  title: \"Expression Evaluator\",\r\n  operands: [],\r\n  operand: 0,\r\n  selectedOperator: \"\",\r\n  operator: \"\",\r\n  result: 0,\r\n  operatorList: [\"+\", \"-\", \"*\", \"/\"],\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PUSH_IN_OPERANDS: {\r\n      if (!action.payload) return state;\r\n\r\n      return {\r\n        ...state,\r\n        operands: [...state.operands, action.payload],\r\n        result: action.payload,\r\n        operand: \"\",\r\n      };\r\n    }\r\n\r\n    case ADD_OPERATION: {\r\n      const operation = action.payload;\r\n\r\n      let operands = [...state.operands];\r\n\r\n      if (state.result) {\r\n        operands = [];\r\n\r\n        operands.push(state.result, operation.operand);\r\n      } else {\r\n        operands.push(operation.operand);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        operands,\r\n        result: ExecAction(action.payload.operator, operands[0], operands[1]),\r\n        selectedOperator: action.payload.operator,\r\n      };\r\n    }\r\n\r\n    case UPDATE_OPERAND: {\r\n      return {\r\n        ...state,\r\n        operand: action.payload,\r\n      };\r\n    }\r\n\r\n    case SET_OPERATOR: {\r\n      return {\r\n        ...state,\r\n        operator: action.payload,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}